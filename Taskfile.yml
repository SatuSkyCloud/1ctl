version: '3'

vars:
  VERSION:
    sh: git describe --tags --exact-match 2>/dev/null || git describe --tags 2>/dev/null || echo "v0.1.0"
  COMMIT:
    sh: git rev-parse --short HEAD 2>/dev/null || echo "unknown"
  DATE:
    sh: date -u '+%Y-%m-%d_%H:%M:%S'
  BINARY_NAME: 1ctl
  BUILD_DIR: bin
  COVERAGE_FILE: coverage.txt

tasks:
  init:
    cmds:
      - go mod init 1ctl
      - go mod tidy
    status:
      - test -f go.mod
  
  format:
    cmds:
      - go fmt ./...

  build:
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - >
        go build -ldflags "
        -X 1ctl/internal/version.Version={{.VERSION}}
        -X 1ctl/internal/version.CommitHash={{.COMMIT}}
        -X 1ctl/internal/version.BuildDate={{.DATE}}
        " -o {{.BUILD_DIR}}/{{.BINARY_NAME}} cmd/1ctl/main.go
    sources:
      - ./**/*.go
    generates:
      - "{{.BUILD_DIR}}/{{.BINARY_NAME}}"

  test:
    desc: Run tests with coverage
    cmds:
      - go test -v -race -coverprofile={{.COVERAGE_FILE}} -covermode=atomic ./...
      - go tool cover -func={{.COVERAGE_FILE}}
    
  test:unit:
    desc: Run unit tests only
    cmds:
      - go test -v -short $(go list ./... | grep -v '/testing/' | grep -v '/testutils') ./...

  test:integration:
    desc: Run integration tests
    cmds:
      - go test -v -race -coverprofile={{.COVERAGE_FILE}} -covermode=atomic ./internal/integration/...

  test:coverage:
    desc: Generate test coverage report
    cmds:
      - task: test
      - go tool cover -html={{.COVERAGE_FILE}} -o coverage.html
      - echo "Coverage report generated at coverage.html"

  lint:
    desc: Run linters
    cmds:
      - golangci-lint run ./...
      - echo "âœ… Linting completed successfully"

  run:
    env:
      APP_ENV: development
    cmds:
      - go run cmd/1ctl/main.go {{.CLI_ARGS}}
    silent: true

  clean:
    cmds:
      - rm -rf {{.BUILD_DIR}}
      - rm -f {{.COVERAGE_FILE}} coverage.html

  version:
    desc: Show the current version that will be used for builds
    cmds:
      - echo "Current version{{":"}} {{.VERSION}}"
      - echo "Commit hash{{":"}} {{.COMMIT}}"
      - echo "Build date{{":"}} {{.DATE}}"